const express = require("express");
const bodyParser = require("body-parser");
const cors = require("cors");
const path = require("path");

const { sendMessageToAI } = require("./aiClient");
const { getStates, connectWebSocket } = require("./haClient");

const app = express();
const PORT = 3000;

app.use(cors());
app.use(bodyParser.json());
app.use(express.static(path.join(__dirname, "public")));

app.get("/", (req, res) => {
  res.sendFile(path.join(__dirname, "public", "index.html"));
});

// üí¨ –û–±—Ä–∞—â–µ–Ω–∏–µ –∫ –ò–ò
app.post("/api/chat", async (req, res) => {
  try {
    const aiResponse = await sendMessageToAI(req.body.message);
    res.json(aiResponse);
  } catch (err) {
    res.status(500).json({ error: "AI API error" });
  }
});

// üè† –ü–æ–ª—É—á–µ–Ω–∏–µ —Å–æ—Å—Ç–æ—è–Ω–∏—è HA
app.get("/api/states", async (req, res) => {
  try {
    const states = await getStates();
    res.json(states);
  } catch (err) {
    res.status(500).json({ error: "HA API error" });
  }
});

app.listen(PORT, () => {
  console.log(`–°–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω –Ω–∞ http://localhost:${PORT}`);

  // üîå WebSocket HA
  connectWebSocket((event) => {
    console.log("üì° HA —Å–æ–±—ã—Ç–∏–µ:", event.entity_id, event.new_state?.state);
    // –∑–¥–µ—Å—å –º–æ–∂–Ω–æ –ª–æ–≥–∏—Ä–æ–≤–∞—Ç—å, —Å–æ—Ö—Ä–∞–Ω—è—Ç—å, –ø–µ—Ä–µ—Å—ã–ª–∞—Ç—å –∏ —Ç.–¥.
  });
});
